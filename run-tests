#!/usr/local/bin/sbcl --script
; -*- mode: Lisp;-*-

(load (merge-pathnames (user-homedir-pathname) (make-pathname :name ".sbclrc")))

(sb-ext:enable-debugger)
(use-package 'asdf)


(asdf:oos 'asdf:load-op :quicklisp)
(push (probe-file #p"./") asdf:*central-registry*)
(ql:quickload 'cl-git)
(ql:quickload 'cl-git-tests)

(defun safe-trace (sym package)
  (handler-bind ((simple-error
                  #'(lambda (c)
                      (format t "Skipping Symbol (probably a macro)~%")
                      (invoke-restart 'skip-symbol))))
    (when (and (fboundp sym)
               (functionp (symbol-function sym))
                                        ;(not (macrop sym))
               (equal (package-name (symbol-package sym))
                      package))
      (format t "Trying to trace Symbol ~A~%" sym)
      (restart-case
          (eval `(trace ,(intern (symbol-name sym) package)))
        (skip-symbol () nil)))))

(use-package 'unix-options)
(with-cli-options ()
    (help trace)
  (when help
    (print-usage-summary
     "Usage:~%~@{~A~%~}"
     '(((#\t "trace") nil "trace the functions during a test run.")))
    (cl-user::quit :unix-status 1))
  (when trace
    (do-symbols (sym 'cl-git)
      (safe-trace sym "CL-GIT"))))

(FiveAM:run! :cl-git)
